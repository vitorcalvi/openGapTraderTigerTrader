# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: tigeropen/push/pb/OrderTransactionData.proto
# Protobuf Python Version: 5.28.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    28,
    3,
    '',
    'tigeropen/push/pb/OrderTransactionData.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n,tigeropen/push/pb/OrderTransactionData.proto\x12\x11tigeropen.push.pb\"\xce\x02\n\x14OrderTransactionData\x12\n\n\x02id\x18\x01 \x01(\x12\x12\x0f\n\x07orderId\x18\x02 \x01(\x12\x12\x0f\n\x07\x61\x63\x63ount\x18\x03 \x01(\t\x12\x0e\n\x06symbol\x18\x04 \x01(\t\x12\x12\n\nidentifier\x18\x05 \x01(\t\x12\x12\n\nmultiplier\x18\x06 \x01(\r\x12\x0e\n\x06\x61\x63tion\x18\x07 \x01(\t\x12\x0e\n\x06market\x18\x08 \x01(\t\x12\x10\n\x08\x63urrency\x18\t \x01(\t\x12\x0f\n\x07segType\x18\n \x01(\t\x12\x0f\n\x07secType\x18\x0b \x01(\t\x12\x13\n\x0b\x66illedPrice\x18\x0c \x01(\x01\x12\x16\n\x0e\x66illedQuantity\x18\r \x01(\x12\x12\x12\n\ncreateTime\x18\x0e \x01(\x04\x12\x12\n\nupdateTime\x18\x0f \x01(\x04\x12\x14\n\x0ctransactTime\x18\x10 \x01(\x04\x12\x11\n\ttimestamp\x18\x11 \x01(\x04\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tigeropen.push.pb.OrderTransactionData_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_ORDERTRANSACTIONDATA']._serialized_start=68
  _globals['_ORDERTRANSACTIONDATA']._serialized_end=402
# @@protoc_insertion_point(module_scope)
